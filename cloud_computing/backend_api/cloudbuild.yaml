# substitutions:
#   _ENV: gs://your-bucket/env/prod.env
#   _GCS_KEY: gs://your-bucket/keys/gcs-key.json

steps:
  # ✅ Salin file .env
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "${_ENV}", ".env"]
    dir: "cloud_computing/backend_api"

  # ✅ Salin gcs-key.json (file private key)
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "${_GCS_KEY}", "gcs-key.json"]
    dir: "cloud_computing/backend_api"

  # ✅ Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    dir: "cloud_computing/backend_api"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/backend-api-sosial-media:${SHORT_SHA}", "."]

  # ✅ Push ke Container Registry (opsional jika pakai Cloud Run)
  - name: "gcr.io/cloud-builders/docker"
    dir: "cloud_computing/backend_api"
    args: ["push", "gcr.io/$PROJECT_ID/backend-api-sosial-media:${SHORT_SHA}"]

  # ✅ Deploy ke Cloud Run (jika pakai Cloud Run, abaikan jika Compute Engine)
  # - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "backend-api-sosial-media",
        "--image",
        "gcr.io/$PROJECT_ID/backend-api-sosial-media:${SHORT_SHA}",
        "--timeout",
        "1000s",
        # "--port",
        # "3000",
        "--port",
        # "3000",
        "3000",
        # "--platform",
        # "managed",
        "--region",
        "us-central1",
        "--allow-unauthenticated"
      ]
      
options:
  logging: CLOUD_LOGGING_ONLY